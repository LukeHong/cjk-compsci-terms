# Concurrency
- en:
    concurrency:
    - { term: concurren, correspond: concurrent }
    - { term: cy,        correspond: quality,                        space: no }
  ja:
    竝行性:
    - { term: 並行,      correspond: concurrent, read: へい こう }
    - { term: 性,        correspond: quality,    read: せい,         space: no }
  ko:
    同時性:
    - { term: 同時,      correspond: concurrent, read: 동 시 }
    - { term: 性,        correspond: quality,    read: 성,           space: no }
    竝行性:
    - { term: 竝行,      correspond: concurrent, read: 병 행 }
    - { term: 性,        correspond: quality,    read: 성,           space: no }
  zh-CN:
    倂發性:
    - { term: 并发,      correspond: concurrent, read: bìng fā }
    - { term: 性,        correspond: quality,    read: xìng,         space: no }
  zh-HK:
    竝行性:
    - { term: 並行,      correspond: concurrent, read: bing6 hang4 }
    - { term: 性,        correspond: quality,    read: sing3,        space: no }
    倂發性:
    - { term: 併發,      correspond: concurrent, read: bing3 faat3 }
    - { term: 性,        correspond: quality,    read: sing3,        space: no }
  zh-TW:
    竝行性:
    - { term: 並行,      correspond: concurrent, read: ㄅㄧㄥˋ ㄒㄧㄥˊ }
    - { term: 性,        correspond: quality,    read: ㄒㄧㄥˋ,      space: no }
    倂發性:
    - { term: 併發,      correspond: concurrent, read: ㄅㄧㄥˋ ㄈㄚ }
    - { term: 性,        correspond: quality,    read: ㄒㄧㄥˋ,      space: no }

# Concurrent programming
- en:
    concurrent programming:
    - term: concurrent
    - term: programming
  ja:
    竝行計算:
    - { term: 並行,     correspond: concurrent,  read: へい こう }
    - { term: プログラミング, loan: programming }
  ko:
    同時性 programming:
    - { term: 同時性,   correspond: concurrent,  read: 동 시 성 }
    - { term: 프로그래밍,     loan: programming }
  zh-CN:
    倂發編程:
    - { term: 并发,     correspond: concurrent,  read: bìng fā }
    - { term: 编程,     correspond: programming, read: biān chéng }
  zh-HK:
    倂發編程:
    - { term: 併發,     correspond: concurrent,  read: bing3 faat3 }
    - { term: 編程,     correspond: programming, read: pin1 cing4 }
  zh-TW:
    倂發編程:
    - { term: 併發,     correspond: concurrent,  read: ㄅㄧㄥˋ ㄈㄚ }
    - { term: 編程,     correspond: programming, read: ㄅㄧㄢ ㄔㄥˊ }

# Synchronization
- en:
    synchronization:
    - { term: synchron, correspond: synchronous }
    - { term: ization,  correspond: make,                            space: no }
  ja:
    同期:
    - { term: 同期,     correspond: synchronous, read: どう き }
  ko:
    同期化:
    - { term: 同期,     correspond: synchronous, read: 동 기 }
    - { term: 化,       correspond: make,        read: 화,           space: no }
  zh-CN:
    同步:
    - { term: 同步,     correspond: synchronous, read: tóng bù }
    同步化:
    - { term: 同步,     correspond: synchronous, read: tóng bù }
    - { term: 化,       correspond: make,        read: huà,          space: no }
  zh-HK:
    同步:
    - { term: 同步,     correspond: synchronous, read: tung4 bou6 }
    同步化:
    - { term: 同步,     correspond: synchronous, read: tung4 bou6 }
    - { term: 化,       correspond: make,        read: faa3,         space: no }
  zh-TW:
    同步:
    - { term: 同步,     correspond: synchronous, read: ㄊㄨㄥˊ ㄅㄨˋ }
    同步化:
    - { term: 同步,     correspond: synchronous, read: ㄊㄨㄥˊ ㄅㄨˋ }
    - { term: 化,       correspond: make,        read: ㄏㄨㄚˋ,      space: no }

# Multiprocessing
- en:
    multiprocessing:
    - {                       term: multi,      correspond: multiple }
    - {                       term: processing, correspond: process, space: no }
  ja:
    multiprocessing:
    - { term: マルチ,         loan: multi,      correspond: multiple }
    - { term: プロセッシング, loan: processing, correspond: process, space: no }
  ko:
    multiprocessing:
    - { term: 멀티,           loan: multi,      correspond: multiple }
    - { term: 프로세싱,       loan: processing, correspond: process, space: no }
    多重處理:
    - { term: 多重, read: 다 중,                correspond: multiple }
    - { term: 處理, read: 처 리,                correspond: process }
  zh-CN:
    多進程:
    - { term: 多,   read: duō,                  correspond: multiple }
    - { term: 進程, read: jìn chéng,            correspond: process }
  zh-HK:
    多元處理:
    - { term: 多元, read: do1 jyun4,            correspond: multiple }
    - { term: 處理, read: cyu2 lei5,            correspond: process }
    多重處理:
    - { term: 多重, read: do1 cung4,            correspond: multiple }
    - { term: 處理, read: cyu2 lei5,            correspond: process }
  zh-TW:
    多元處理:
    - { term: 多元, read: ㄉㄨㄛ ㄩㄢˊ,         correspond: multiple }
    - { term: 處理, read: ㄔㄨˇ ㄌㄧˇ,          correspond: process }
    多重處理:
    - { term: 多重, read: ㄉㄨㄛ ㄔㄨㄥˊ,       correspond: multiple }
    - { term: 處理, read: ㄔㄨˇ ㄌㄧˇ,          correspond: process }

# Thread
- en:
    thread:
    - term: thread
  ja:
    thread:
    - { term: スレッド,   loan: thread }
  ko:
    thread:
    - { term: 스레드,     loan: thread }
  zh-CN:
    線程:
    - { term: 线,   correspond: thread,  read: xiàn }
    - { term: 程,   correspond: process, read: chéng }
  zh-HK:
    線程:
    - { term: 線,   correspond: thread,  read: sin3 }
    - { term: 程,   correspond: process, read: cing4 }
  zh-TW:
    執行緒:
    - { term: 執行, correspond: process, read: ㄓˊ ㄒㄧㄥˊ }
    - { term: 緒,   correspond: thread,  read: ㄒㄩˋ }

# Lock & mutex
- en:
    lock:
    - term:   lock
    mutex:
    - { term: mut, correspond: mutual }
    - { term: ex,  correspond: exclusion,                            space: no }
  ja:
    lock:
    - { term: ロック,    loan: lock }
  ko:
    lock:
    - { term: 락,        loan: lock }
    mutex:
    - { term: 뮤텍스,    loan: mutex }  # FIXME
  zh-CN:
    鎖:
    - { term: 锁,  correspond: lock,      read: suǒ }
    互斥鎖:
    - { term: 互,  correspond: mutual,    read: hù }
    - { term: 斥,  correspond: exclusion, read: chì,                 space: no }
    - { term: 锁,  correspond: lock,      read: suǒ }
  zh-HK:
    鎖:
    - { term: 鎖,  correspond: lock,      read: so2 }
    互斥鎖:
    - { term: 互,  correspond: mutual,    read: wu6 }
    - { term: 斥,  correspond: exclusion, read: cik1,                space: no }
    - { term: 鎖,  correspond: lock,      read: so2 }
  zh-TW:
    鎖:
    - { term: 鎖,  correspond: lock,      read: ㄙㄨㄛˇ }
    互斥鎖:
    - { term: 互,  correspond: mutual,    read: ㄏㄨˋ }
    - { term: 斥,  correspond: exclusion, read: ㄔˋ,                 space: no }
    - { term: 鎖,  correspond: lock,      read: ㄙㄨㄛˇ }

# Monitor
- en:
    monitor:
    - { term: moni,                    correspond: watch }
    - { term: tor,                     correspond: agent,            space: no }
  ja:
    monitor:
    - { term: モニ,  loan: moni,       correspond: watch }
    - { term: タ,    loan: tor,        correspond: agent,            space: no }
  ko:
    monitor:
    - { term: 모니,  loan: moni,       correspond: watch }
    - { term: 터,    loan: tor,        correspond: agent,           space: no }
  zh-CN:
    管程:
    - { term: 管,    read: guǎn,       correspond: watch }
    - { term: 程,    read: chéng,      correspond: process,          space: no }
    監視器:
    - { term: 监视,  read: jiān shì,   correspond: watch }
    - { term: 器,    read: qì,         correspond: agent,            space: no }
  zh-HK:
    監視器:
    - { term: 監視,  read: gaam1 si6,  correspond: watch }
    - { term: 器,    read: hei3,       correspond: agent,            space: no }
  zh-TW:
    監視器:
    - { term: 監視,  read: ㄐㄧㄢ ㄕˋ, correspond: watch }
    - { term: 器,    read: ㄑㄧˋ,      correspond: agent,            space: no }

# Transactional memory
- en:
    transactional memory:
    - term: transactional
    - term: memory
  ja:
    transactional memory:
    - { term: トランザクショナル, loan: transactional }
    - { term: メモリ,             loan: memory }
  ko:
    transactional memory:
    - { term: 트랜잭셔널,         loan: transactional }
    - { term: 메모리,             loan: memory }
  zh-CN:
    事務內存:
    - { term: 事务,         correspond: transactional, read: shì wù }
    - { term: 内存,         correspond: memoery,       read: nèi cún }
  zh-HK:
    事務記憶體:
    - { term: 事務,         correspond: transactional, read: si6 mou6 }
    - { term: 記憶體,       correspond: memory,        read: gei3 jik1 tai2 }
  zh-TW:
    事務記憶體:
    - { term: 事務,         correspond: transactional, read: ㄕˋ ㄨˋ }
    - { term: 記憶體,       correspond: memory,        read: ㄐㄧˋ ㄧˋ ㄊㄧˇ }
